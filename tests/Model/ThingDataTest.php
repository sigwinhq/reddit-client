<?php

declare(strict_types=1);

/*
 * This file is part of the Sigwin project.
 *
 * (c) sigwin.hr
 *
 * This source file is subject to the MIT license that is bundled
 * with this source code in the file LICENSE.
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace Sigwin\RedditClient\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * ThingDataTest Class Doc Comment.
 *
 * @category    Class
 *
 * @description ThingData
 *
 * @author      OpenAPI Generator team
 *
 * @see        https://openapi-generator.tech
 *
 * @internal
 */
#[\PHPUnit\Framework\Attributes\CoversNothing]
#[\PHPUnit\Framework\Attributes\Small]
final class ThingDataTest extends TestCase
{
    /**
     * Setup before running any test case.
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case.
     */
    protected function setUp(): void
    {
    }

    /**
     * Clean up after running each test case.
     */
    protected function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases.
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "ThingData".
     */
    public function testThingData(): void
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "id".
     */
    public function testPropertyId(): void
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "name".
     */
    public function testPropertyName(): void
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "permalink".
     */
    public function testPropertyPermalink(): void
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "post_hint".
     */
    public function testPropertyPostHint(): void
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "created_utc".
     */
    public function testPropertyCreatedUtc(): void
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "subreddit".
     */
    public function testPropertySubreddit(): void
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "subreddit_id".
     */
    public function testPropertySubredditId(): void
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "subreddit_type".
     */
    public function testPropertySubredditType(): void
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "author".
     */
    public function testPropertyAuthor(): void
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "author_fullname".
     */
    public function testPropertyAuthorFullname(): void
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "title".
     */
    public function testPropertyTitle(): void
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "url".
     */
    public function testPropertyUrl(): void
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "url_overridden_by_dest".
     */
    public function testPropertyUrlOverriddenByDest(): void
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "link_id".
     */
    public function testPropertyLinkId(): void
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "link_author".
     */
    public function testPropertyLinkAuthor(): void
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "link_title".
     */
    public function testPropertyLinkTitle(): void
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "link_permalink".
     */
    public function testPropertyLinkPermalink(): void
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "body".
     */
    public function testPropertyBody(): void
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "is_gallery".
     */
    public function testPropertyIsGallery(): void
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "is_meta".
     */
    public function testPropertyIsMeta(): void
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "is_self".
     */
    public function testPropertyIsSelf(): void
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "is_video".
     */
    public function testPropertyIsVideo(): void
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "selftext".
     */
    public function testPropertySelftext(): void
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
